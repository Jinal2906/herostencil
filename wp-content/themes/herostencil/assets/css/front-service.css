/* @mixin respond-above($breakpoint) {
 // If the breakpoint exists in the map.
 @if map-has-key($breakpoints, $breakpoint) {
 // Get the breakpoint value.
 $breakpoint-value: map-get($breakpoints, $breakpoint);
 // Write the media query.
 @media (min-width: $breakpoint-value) {
 @content;
 }
 // If the breakpoint doesn't exist in the map.
 } @else {
 // Log a warning.
 @warn 'Invalid breakpoint: #{$breakpoint}.';
 }
 }
 */
/*
 @mixin respond-between($lower, $upper) {
 // If both the lower and upper breakpoints exist in the map.
 @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
 // Get the lower and upper breakpoints.
 $lower-breakpoint: map-get($breakpoints, $lower);
 $upper-breakpoint: map-get($breakpoints, $upper);
 // Write the media query.
 @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
 @content;
 }
 // If one or both of the breakpoints don't exist.
 } @else {
 // If lower breakpoint is invalid.
 @if (map-has-key($breakpoints, $lower) == false) {
 // Log a warning.
 @warn 'Your lower breakpoint was invalid: #{$lower}.';
 }
 // If upper breakpoint is invalid.
 @if (map-has-key($breakpoints, $upper) == false) {
 // Log a warning.
 @warn 'Your upper breakpoint was invalid: #{$upper}.';
 }
 }
 }
 */
/*
 @mixin position($position:'', $topdirection:'', $rightdirection:'', $bottomdirection:'', $leftdirection:'') {
 position: 	unquote($position);
 top: 		unquote($topdirection);
 right: 		unquote($rightdirection);
 bottom: 	unquote($bottomdirection);
 left: 		unquote($leftdirection);
 }
 */
.heading-style {
  color: red;
  font-family: cursive;
  font-weight: 700;
}
.services-section .wrapper {
  background: rgba(0, 0, 0, 0.5);
}
.services-section li:hover .service-content {
  opacity: 1;
}
/** services section typo */
.services-section li h2 {
  font-size: 20px;
  color: #000;
}
.services-section li h3 {
  font-size: 1.2rem;
  color: #8d3006;
}
/*# sourceMappingURL=front-service.css.map */